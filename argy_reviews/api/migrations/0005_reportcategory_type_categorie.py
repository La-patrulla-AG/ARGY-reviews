# Generated by Django 5.1.2 on 2025-01-27 20:52

from django.db import migrations, models

def create_report_categories_reviews(apps, schema_editor):
    ReportCategory = apps.get_model('api', 'ReportCategory')

    categories = [
        'Contenido sexual',
        'Contenido violento o repulsivo',
        'Contenido abusivo',
        'Acoso o bullying',
        'Actividades peligrosas o dañinas',
        'Información errónea',
    ]

    for category in categories:
        ReportCategory.objects.get_or_create(name=category, type_categorie='reviews')
        
def create_report_categories_posts(apps, schema_editor):
    ReportCategory = apps.get_model('api', 'ReportCategory')

    categories = [
        'Contenido sexual',
        'Contenido abusivo o que incita al odio',
        'Acoso o bullying',
        'Actividades peligrosas o dañinas',
        'Información errónea',
        'Abuso de menores',
        'Fomenta el terrorismo',
        'Contenido engañoso o spam',
        'Problema legal'
    ]

    for category in categories:
        ReportCategory.objects.get_or_create(name=category, type_categorie='posts')
        
def create_report_categories_users(apps, schema_editor):
    ReportCategory = apps.get_model('api', 'ReportCategory')

    categories = [
        'Acoso y cyberbullying',
        'Privacidad',
        'Suplantación de identidad',
        'Amenazas violentas',
        'Menores en riesgo',
        'Incitacion al odio contra un grupo protegido',
        'Spam y estafas'
    ]

    for category in categories:
        ReportCategory.objects.get_or_create(name=category, type_categorie='users')

def create_post_categories(apps, schema_editor):
    PostCategory = apps.get_model('api', 'PostCategory')

    categories = [
        'Tecnología',
        'Cine y TV',
        'Libros',
        'Música',
        'Videojuegos',
        'Restaurantes',
        'Viajes',
        'Moda',
        'Deportes',
        'Salud y bienestar',
        'Educación',
        'Finanzas',
        'Hogar y jardín',
        'Mascotas',
        'Automóviles',
        'Belleza',
        'Comida y bebida',
        'Eventos',
        'Fotografía',
        'Arte',
        'Historia',
        'Ciencia',
        'Política',
        'Religión',
        'Filosofía',
        'Idiomas',
        'Negocios',
        'Emprendimiento',
        'Marketing',
        'Publicidad',
        'Recetas',
        'Manualidades',
        'Decoración',
        'Joyería',
        'Ropa y accesorios',
        'Juguetes',
        'Coleccionables',
        'Instrumentos musicales',
        'Películas',
        'Series',
        'Documentales',
        'Cómics',
        'Anime',
        'Manga',
        'Fotografía',
        'Pintura',
        'Escultura',
        'Arquitectura',
        'Diseño gráfico',
        'Diseño web',
        'Programación',
        'Desarrollo de aplicaciones',
        'Desarrollo de videojuegos',
        'Hardware',
        'Software',
        'Sistemas operativos',
        'Redes',
        'Ciberseguridad',
        'Inteligencia artificial',
        'Big data',
        'Machine learning',
        'Deep learning',
        'Blockchain',
        'Criptomonedas',
        'Economía',
        'Inversiones',
        'Finanzas personales',
        'Contabilidad',
        'Impuestos',
        'Bolsa',
    ]

    for category in categories:
        PostCategory.objects.get_or_create(name=category)

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_alter_reportcategory_name'),
    ]

    operations = [
        migrations.RunPython(create_report_categories_reviews),
        migrations.RunPython(create_report_categories_posts),
        migrations.RunPython(create_report_categories_users),
        migrations.RunPython(create_post_categories),
    ]
